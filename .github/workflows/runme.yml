name: deploy anything anywhere

on:
  workflow_dispatch:
    inputs:
      IP:
        description: 'IP address of the machine to deploy to'
        required: true
        type: string
      PORT:
        description: 'Port to run the app on'
        required: true
        type: string
        default: '3000'
      username:
        description: 'Username for the remote machine'
        required: true
        type: string
      RSA:
        description: 'Base64 encoded RSA private key'
        required: true
        type: string
      where:
        description: 'Remote directory to rsync app to'
        required: true
        type: string
      pull:
        description: 'Docker image to pull'
        required: true
        type: string
        default: 'node:18'
      prepare:
        description: 'Command to prepare container'
        required: true
        type: string
        default: 'npm install express'
      name:
        description: 'Name of the container'
        required: true
        type: string
      run:
        description: 'Command to run the container'
        required: true
        type: string
        default: 'node app.js'
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - 'rsync and run'
          - 'stop'

jobs:
  deploy:
    name: Deploy (${{ github.event.inputs.action }})
    runs-on: ubuntu-latest

    steps:
      # Only checkout if we're doing rsync and run
      - name: Checkout
        if: ${{ inputs.action == 'rsync and run' }}
        uses: actions/checkout@v4
      
      # Decode RSA key for SSH operations
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ inputs.RSA }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ inputs.IP }} >> ~/.ssh/known_hosts
      
      # Stop existing container (for both actions)
      - name: Stop container
        uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ inputs.IP }}
          username: ${{ inputs.username }}
          key: ${{ inputs.RSA }}
          port: 22
          script: |
            docker stop ${{ inputs.name }} || true
            docker rm ${{ inputs.name }} || true
      
      # For rsync and run, copy app to remote
      - name: Rsync app
        if: ${{ inputs.action == 'rsync and run' }}
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" app/* ${{ inputs.username }}@${{ inputs.IP }}:${{ inputs.where }}/app/.
      
      # For rsync and run, start container
      - name: Run container
        if: ${{ inputs.action == 'rsync and run' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ inputs.IP }}
          username: ${{ inputs.username }}
          key: ${{ inputs.RSA }}
          port: 22
          script: |
            docker pull ${{ inputs.pull }}
            docker run -d \
              -p ${{ inputs.PORT }}:${{ inputs.PORT }} \
              --name ${{ inputs.name }} \
              -v ${{ inputs.where }}/app:/app \
              -w /app \
              -e PORT=${{ inputs.PORT }} \
              ${{ inputs.pull }} \
              sh -c "${{ inputs.prepare }} && ${{ inputs.run }}"